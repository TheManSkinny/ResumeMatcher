@page
@model ResumeMatcher.Pages.JobListingsModel
@{
    ViewData["Title"] = "Job Listings";
}

<h2 class="mb-4">Available Job Posts</h2>

<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search jobs..." />
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</form>

@if (!Model.Jobs.Any())
{
    <div class="alert alert-warning">No job listings found.</div>
}
else
{
    foreach (var job in Model.Jobs)
    {
        <div class="card mb-3">
            <div class="card-body">
                <h5 class="card-title">@job.JobTitle</h5>
                <p class="card-text">@job.Description</p>
                <p class="text-muted"><small>Posted: @job.PostedAt.ToShortDateString()</small></p>
                
                <div class="mt-3">
                    <a asp-page="/EditJob" asp-route-id="@job.Id" class="btn btn-sm btn-warning">Edit</a>
                    <form method="post" asp-page-handler="Delete" asp-route-id="@job.Id" class="d-inline">
                        <button type="submit" class="btn btn-sm btn-danger"
                            onclick="return confirm('Delete this job?')">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    }

    <nav>
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-route-page="@i" asp-route-SearchTerm="@Model.SearchTerm">@i</a>
                </li>
            }
        </ul>
    </nav>
}
