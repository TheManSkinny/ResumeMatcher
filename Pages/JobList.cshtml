@page
@model ResumeMatcher.Pages.JobListingsModel
@{
    ViewData["Title"] = "Job Listings";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-briefcase me-2"></i>Available Job Posts</h2>
        <a asp-page="/AddJob" class="btn btn-success">
            <i class="fas fa-plus me-1"></i>Post New Job
        </a>
    </div>

    <!-- Enhanced Search and Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-6">
                    <label for="SearchTerm" class="form-label">Search Jobs</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control"
                            placeholder="Search by title, description, or skills..." />
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="SortBy" class="form-label">Sort By</label>
                    <select name="SortBy" class="form-select">
                        <option value="date" selected>Latest First</option>
                        <option value="title">Job Title</option>
                        <option value="relevance">Relevance</option>
                    </select>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button class="btn btn-primary w-100" type="submit">
                        <i class="fas fa-filter me-1"></i>Apply Filters
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Results Summary -->
    <div class="mb-3">
        <small class="text-muted">
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <span>Showing results for "<strong>@Model.SearchTerm</strong>" - </span>
            }
            <span>@Model.Jobs.Count() job(s) found</span>
        </small>
    </div>

    @if (!Model.Jobs.Any())
    {
        <div class="alert alert-info text-center py-5">
            <i class="fas fa-search fa-3x text-muted mb-3"></i>
            <h5>No job listings found</h5>
            <p class="text-muted">
                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <span>Try adjusting your search terms or <a href="/JobList">browse all jobs</a>.</span>
                }
                else
                {
                    <span>Be the first to <a asp-page="/AddJob">post a job</a>!</span>
                }
            </p>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var job in Model.Jobs)
            {
                <div class="col-md-6 mb-4">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h5 class="card-title text-primary">@job.JobTitle</h5>
                                <small class="text-muted">
                                    <i class="fas fa-calendar-alt me-1"></i>
                                    @job.PostedAt.ToString("MMM dd, yyyy")
                                </small>
                            </div>
                            
                            <p class="card-text">
                                @if (job.Description != null && job.Description.Length > 150)
                                {
                                    <text>@job.Description.Substring(0, 150)...</text>
                                }
                                else
                                {
                                    @job.Description
                                }
                            </p>
                            
                            <!-- Extracted Skills Tags -->
                            @{
                                var skillKeywords = new List<string> { "JavaScript", "TypeScript", "C#", "Java", "Python", "React", "Angular", "Vue", "Node.js", "SQL", "MongoDB", "AWS", "Azure", "Docker", "Kubernetes", "Git", ".NET", "Spring", "Django", "Laravel", "Machine Learning", "AI", "DevOps" };
                                var foundSkills = skillKeywords.Where(skill => (job.Description ?? "").Contains(skill, StringComparison.OrdinalIgnoreCase)).ToList();
                            }
                            @if (foundSkills.Any())
                            {
                                <div class="mb-3">
                                    @foreach (var skill in foundSkills.Take(5))
                                    {
                                        <span class="badge bg-secondary me-1 mb-1">@skill</span>
                                    }
                                    @if (foundSkills.Count > 5)
                                    {
                                        <span class="badge bg-light text-dark">+@(foundSkills.Count - 5) more</span>
                                    }
                                </div>
                            }
                        </div>
                        
                        <div class="card-footer bg-transparent">
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    <i class="fas fa-briefcase me-1"></i>
                                    Job ID: @job.Id
                                </small>
                                <button class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-eye me-1"></i>View Details
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    <nav>
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-page="JobList" asp-route-page="@i"
                        asp-route-SearchTerm="@Model.SearchTerm">@i</a>
                </li>
            }
        </ul>
    </nav>
    }
</div>
