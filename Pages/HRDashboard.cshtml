@page
@using ResumeMatcher.Models
@model ResumeMatcher.Pages.HRDashboardModel
@{
    ViewData["Title"] = "HR Dashboard";
}

<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="dashboard-title">
                        <i class="fas fa-chart-bar me-3"></i>HR Dashboard
                    </h1>
                    <p class="dashboard-subtitle text-muted mb-0">
                        Manage applications, track performance, and make data-driven hiring decisions
                    </p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary btn-modern" onclick="refreshData()">
                        <i class="fas fa-sync-alt me-2"></i>Refresh Data
                    </button>
                    <a asp-page="/AddJob" class="btn btn-success btn-modern">
                        <i class="fas fa-plus me-2"></i>Post New Job
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Key Metrics Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card metric-card border-left-primary shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <div class="metric-label">Total Jobs</div>
                            <div class="metric-value text-primary">@Model.DashboardData["TotalJobs"]</div>
                            <div class="metric-description">Active job postings</div>
                        </div>
                        <div class="metric-icon">
                            <i class="fas fa-briefcase"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card metric-card border-left-success shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <div class="metric-label">Total Resumes</div>
                            <div class="metric-value text-success">@Model.DashboardData["TotalResumes"]</div>
                            <div class="metric-description">Candidate profiles</div>
                        </div>
                        <div class="metric-icon">
                            <i class="fas fa-file-alt"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card metric-card border-left-info shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <div class="metric-label">Applications</div>
                            <div class="metric-value text-info">@Model.DashboardData["TotalApplications"]</div>
                            <div class="metric-description">Total submissions</div>
                        </div>
                        <div class="metric-icon">
                            <i class="fas fa-user-check"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card metric-card border-left-warning shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center justify-content-between">
                        <div>
                            <div class="metric-label">This Week</div>
                            <div class="metric-value text-warning">@Model.DashboardData["ApplicationsThisWeek"]</div>
                            <div class="metric-description">New applications</div>
                        </div>
                        <div class="metric-icon">
                            <i class="fas fa-calendar-week"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Recent Applications -->
        <div class="col-lg-8 mb-4">
            <div class="card dashboard-card shadow-sm">
                <div class="card-header bg-white border-0 pb-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="card-title mb-1">Recent Applications</h2>
                            <p class="card-subtitle text-muted small mb-0">Latest candidate submissions and their status</p>
                        </div>
                        <a asp-page="/Applications" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-external-link-alt me-1"></i>View All
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.RecentApplications.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-modern">
                                <thead>
                                    <tr>
                                        <th class="table-header">Candidate</th>
                                        <th class="table-header">Job</th>
                                        <th class="table-header">Match Score</th>
                                        <th class="table-header">Status</th>
                                        <th class="table-header">Applied</th>
                                        <th class="table-header">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var app in Model.RecentApplications.Take(10))
                                    {
                                        <tr class="table-row">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="candidate-avatar">
                                                        @app.CV.FullName?.Substring(0, 1).ToUpper()
                                                    </div>
                                                    <div class="ms-3">
                                                        <div class="candidate-name">@app.CV.FullName</div>
                                                        <div class="candidate-email">@app.CV.Email</div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="job-title">@app.JobPost.JobTitle</div>
                                            </td>
                                            <td>
                                                <div class="match-score-container">
                                                    <div class="progress match-progress">
                                                        <div class="progress-bar @(app.MatchScore >= 70 ? "bg-success" : app.MatchScore >= 40 ? "bg-warning" : "bg-info")" 
                                                             style="width: @(app.MatchScore)%">
                                                        </div>
                                                    </div>
                                                    <span class="match-score-text">@app.MatchScore.ToString("F1")%</span>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="status-badge @GetStatusBadgeClass(app.Status)">
                                                    @app.Status.ToString()
                                                </span>
                                            </td>
                                            <td>
                                                <div class="date-applied">@app.AppliedAt.ToString("MMM dd, yyyy")</div>
                                                <div class="time-applied">@app.AppliedAt.ToString("h:mm tt")</div>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm action-buttons">
                                                    <button class="btn btn-outline-primary" title="View Resume" data-bs-toggle="tooltip">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="btn btn-outline-success" title="Shortlist" data-bs-toggle="tooltip">
                                                        <i class="fas fa-star"></i>
                                                    </button>
                                                    <button class="btn btn-outline-info" title="Schedule Interview" data-bs-toggle="tooltip">
                                                        <i class="fas fa-calendar"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="empty-state text-center py-5">
                            <i class="fas fa-inbox empty-state-icon mb-3"></i>
                            <h6 class="empty-state-title">No applications yet</h6>
                            <p class="empty-state-text">Applications will appear here once candidates start applying to your jobs.</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Top Skills in Demand -->
        <div class="col-lg-4 mb-4">
            <div class="card dashboard-card shadow-sm">
                <div class="card-header bg-white border-0 pb-0">
                    <div>
                        <h2 class="card-title mb-1">Top Skills in Demand</h2>
                        <p class="card-subtitle text-muted small mb-0">Most requested skills in job postings</p>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.TopSkills.Any())
                    {
                        <div class="skills-container">
                            @foreach (var skill in Model.TopSkills.Take(8))
                            {
                                <div class="skill-item d-flex justify-content-between align-items-center mb-3">
                                    <span class="skill-badge">@skill</span>
                                    <div class="skill-demand">
                                        <span class="demand-indicator"></span>
                                        <small class="text-muted ms-2">High Demand</small>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="empty-state text-center py-4">
                            <i class="fas fa-code empty-state-icon-sm mb-3"></i>
                            <p class="empty-state-text">No skill data available yet.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Analytics Charts Row -->
    <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="card dashboard-card shadow-sm">
                <div class="card-header bg-white border-0 pb-0">
                    <div>
                        <h5 class="card-title mb-1">Application Trends</h5>
                        <p class="text-muted small mb-0">Application volume over the past 30 days</p>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="applicationTrendsChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-6 mb-4">
            <div class="card dashboard-card shadow-sm">
                <div class="card-header bg-white border-0 pb-0">
                    <div>
                        <h5 class="card-title mb-1">Match Quality Distribution</h5>
                        <p class="text-muted small mb-0">Quality breakdown of candidate matches</p>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="matchQualityChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(ApplicationStatus status)
    {
        return status switch
        {
            ApplicationStatus.Applied => "bg-primary",
            ApplicationStatus.Reviewing => "bg-warning",
            ApplicationStatus.Shortlisted => "bg-info",
            ApplicationStatus.InterviewScheduled => "bg-success",
            ApplicationStatus.Interviewed => "bg-success",
            ApplicationStatus.Offered => "bg-success",
            ApplicationStatus.Hired => "bg-success",
            ApplicationStatus.Rejected => "bg-danger",
            ApplicationStatus.Withdrawn => "bg-secondary",
            _ => "bg-light"
        };
    }
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
// Application Trends Chart
const trendsCtx = document.getElementById('applicationTrendsChart').getContext('2d');
const trendsChart = new Chart(trendsCtx, {
    type: 'line',
    data: {
        labels: @Html.Raw(Json.Serialize(Model.ApplicationTrends.Select(t => t.Date.ToString("MMM dd")))),
        datasets: [{
            label: 'Applications',
            data: @Html.Raw(Json.Serialize(Model.ApplicationTrends.Select(t => t.ApplicationCount))),
            borderColor: 'rgb(75, 192, 192)',
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            tension: 0.1
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                display: false
            }
        },
        scales: {
            y: {
                beginAtZero: true
            }
        }
    }
});

// Match Quality Chart
const qualityCtx = document.getElementById('matchQualityChart').getContext('2d');
const qualityChart = new Chart(qualityCtx, {
    type: 'doughnut',
    data: {
        labels: ['Excellent (70%+)', 'Good (40-69%)', 'Fair (0-39%)'],
        datasets: [{
            data: @Html.Raw(Json.Serialize(Model.MatchQualityDistribution)),
            backgroundColor: ['#28a745', '#ffc107', '#17a2b8']
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'bottom'
            }
        }
    }
});

function refreshData() {
    location.reload();
}
</script>

<style>
/* Global Typography */
body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    font-weight: 400;
    line-height: 1.6;
    color: #374151;
    background-color: #f8fafc;
    font-feature-settings: "cv02", "cv03", "cv04", "cv11";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/* Additional Typography Improvements */
h1, h2, h3, h4, h5, h6 {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    font-weight: 700;
    line-height: 1.2;
    color: #111827;
    margin-bottom: 0.5rem;
}

h1 { font-size: 3rem; font-weight: 800; }
h2 { font-size: 1.875rem; font-weight: 700; }
h3 { font-size: 1.5rem; font-weight: 600; }
h4 { font-size: 1.25rem; font-weight: 600; }
h5 { font-size: 1.125rem; font-weight: 600; }
h6 { font-size: 1rem; font-weight: 600; }

/* Dashboard Header */
.dashboard-title {
    font-size: 3rem;
    font-weight: 800;
    color: #111827;
    margin-bottom: 0.75rem;
    letter-spacing: -0.05em;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    line-height: 1.1;
}

.dashboard-subtitle {
    font-size: 1.25rem;
    font-weight: 500;
    color: #6b7280;
    line-height: 1.4;
    max-width: 600px;
}
    color: #6b7280;
    line-height: 1.5;
}

/* Section Headers */
.section-header {
    display: flex;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid #f3f4f6;
}

.section-header h2 {
    margin-bottom: 0;
    color: #1f2937;
    font-weight: 700;
}

.section-header .section-icon {
    width: 2.5rem;
    height: 2.5rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 1rem;
    color: white;
    font-size: 1.125rem;
}

/* Modern Buttons */
.btn-modern {
    font-weight: 600;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    border: 1px solid transparent;
    transition: all 0.2s ease-in-out;
    letter-spacing: 0.025em;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.btn-modern:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.btn-modern:active {
    transform: translateY(0);
}

/* Metric Cards */
.metric-card {
    border: none;
    border-radius: 0.75rem;
    transition: all 0.2s ease-in-out;
    background: white;
}

.metric-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

.metric-label {
    font-size: 0.8rem;
    font-weight: 600;
    color: #6b7280;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin-bottom: 0.75rem;
}

.metric-value {
    font-size: 2.75rem;
    font-weight: 800;
    line-height: 1;
    margin-bottom: 0.25rem;
    letter-spacing: -0.05em;
}

.metric-description {
    font-size: 0.875rem;
    color: #9ca3af;
    font-weight: 500;
    line-height: 1.25;
}

.metric-icon {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
}

.metric-icon i {
    font-size: 1.5rem;
    color: #6b7280;
}

/* Dashboard Cards */
.dashboard-card {
    border: none;
    border-radius: 0.75rem;
    background: white;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.card-title {
    font-size: 1.375rem;
    font-weight: 700;
    color: #111827;
    margin-bottom: 0.25rem;
    letter-spacing: -0.025em;
}

.card-subtitle {
    font-size: 0.875rem;
    font-weight: 500;
    color: #6b7280;
    margin-bottom: 0;
}

.card-header {
    padding: 1.5rem 1.5rem 1rem 1.5rem;
}

/* Table Styling */
.table-modern {
    margin-bottom: 0;
}

.table-header {
    font-size: 0.875rem;
    font-weight: 700;
    color: #4b5563;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    border-bottom: 2px solid #e5e7eb;
    padding: 1.25rem 1rem;
    background: #f9fafb;
}

.table-row {
    border-bottom: 1px solid #f3f4f6;
}

.table-row:hover {
    background-color: #f9fafb;
}

.table-row td {
    padding: 1rem 0.75rem;
    vertical-align: middle;
    border-top: none;
}

/* Candidate Info */
.candidate-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 0.875rem;
}

.candidate-name {
    font-weight: 700;
    color: #111827;
    font-size: 0.9rem;
    line-height: 1.25;
    letter-spacing: -0.025em;
}

.candidate-email {
    font-size: 0.75rem;
    color: #6b7280;
    line-height: 1.25;
}

.job-title {
    font-weight: 500;
    color: #374151;
    font-size: 0.875rem;
}

/* Match Score */
.match-score-container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.match-progress {
    height: 6px;
    width: 60px;
    border-radius: 3px;
    background-color: #e5e7eb;
}

.match-score-text {
    font-size: 0.75rem;
    font-weight: 600;
    color: #374151;
}

/* Status Badges */
.status-badge {
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    text-transform: capitalize;
}

/* Date/Time */
.date-applied {
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
    line-height: 1.25;
}

.time-applied {
    font-size: 0.75rem;
    color: #6b7280;
    line-height: 1.25;
}

/* Action Buttons */
.action-buttons .btn {
    padding: 0.375rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.75rem;
}

/* Skills Section */
.skills-container {
    max-height: 400px;
    overflow-y: auto;
}

.skill-item {
    padding: 0.5rem 0;
    border-bottom: 1px solid #f3f4f6;
}

.skill-item:last-child {
    border-bottom: none;
}

.skill-badge {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 0.375rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 500;
}

.demand-indicator {
    width: 8px;
    height: 8px;
    background: #10b981;
    border-radius: 50%;
    display: inline-block;
}

/* Empty States */
.empty-state-icon {
    font-size: 3rem;
    color: #d1d5db;
}

.empty-state-icon-sm {
    font-size: 2rem;
    color: #d1d5db;
}

.empty-state-title {
    font-weight: 700;
    font-size: 1.125rem;
    color: #374151;
    margin-bottom: 0.5rem;
    letter-spacing: -0.025em;
}

.empty-state-text {
    color: #6b7280;
    font-size: 0.875rem;
    margin-bottom: 0;
}

/* Border Colors */
.border-left-primary {
    border-left: 0.25rem solid #3b82f6 !important;
}
.border-left-success {
    border-left: 0.25rem solid #10b981 !important;
}
.border-left-info {
    border-left: 0.25rem solid #06b6d4 !important;
}
.border-left-warning {
    border-left: 0.25rem solid #f59e0b !important;
}

/* Responsive adjustments */
@@media (max-width: 768px) {
    .dashboard-title {
        font-size: 2rem;
        line-height: 1.1;
    }
    
    .metric-value {
        font-size: 2rem;
    }
    
    .dashboard-subtitle {
        font-size: 1rem;
    }
    
    .metric-card {
        margin-bottom: 1rem;
    }
}
</style>
